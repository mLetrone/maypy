name: Checks

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  lint:
    name: lint code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.9"
      - name: update pip
        run: pip install --upgrade pip
      - name: install poetry
        run: pip install poetry
      - name: install dependencies
        run: poetry install
      - name: check format
        run: poetry run ruff format
      - name: check lint
        run: poetry run ruff check --fix --exit-non-zero-on-fix
      - name: mypy
        run: poetry run mypy

  verify-docs:
    name: verify docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.9"
      - name: update pip
        run: pip install --upgrade pip
      - name: install poetry
        run: pip install poetry
      - name: install docs dependencies
        run: poetry install --only docs
      - name: checks docs
        run: |
          cd docs
          poetry run mkdocs build --strict

  tests:
    name: Pytest Python ${{matrix.python-version}}
    runs-on: ubuntu-latest
    needs: [ lint ]
    strategy:
      matrix:
        python-version:
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
    steps:
      - uses: actions/checkout@v4
      - name: Set up python ${{matrix.python-version}}
        uses: actions/setup-python@v5
        with:
          python-version: ${{matrix.python-version}}
      - run: pip install --upgrade pip
      - run: pip install poetry
      - run: poetry install
      - run: poetry run pytest
        env:
          COVERAGE_FILE: .coverage.py${{ matrix.python-version }}
      - run: tree -a .
      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: .coverage.py${{ matrix.python-version }}
          path: .coverage.py${{ matrix.python-version }}
          if-no-files-found: error
          include-hidden-files: true

  coverage-combine:
    name: Combine coverages
    runs-on: ubuntu-latest
    needs: [ tests ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: "pip"
      - name: Update pip
        run: pip install --upgrade pip
      - name: Install coverage
        run: pip install coverage[toml]
      - name: Download coverage files
        uses: actions/download-artifact@v4
        with:
          path: coverage
          merge-multiple: true
      - name: list files
        run: tree -a .
      - run: coverage combine coverage
      - run: coverage report
      - run: coverage html -d htmlcov
      - name: Upload coverage html
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html
          path: htmlcov