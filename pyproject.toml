[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "maypy"
# Version is dynamic from the tag of release
# but poetry needs it
version = "0.0.0"
description = "Pythonic Java optional"
authors = ["Mathieu Letrone <mathieu.letrone@gmail.com>"]
readme = "README.md"
license = "MIT"

classifiers = [
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Utilities",
    "Typing :: Typed",
]

packages = [{include = "maypy"}]

[tool.poetry.dependencies]
python = "^3.9"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.2"
mockito = "^1.5.0"
mypy = "^1.11.1"
ruff = "^0.5.6"
pytest-cov = "^5.0.0"
pytest-sugar = "^1.0.0"
pre-commit = "^3.8.0"
pytest-html = "^4.1.1"
mkdocs = "^1.6.1"
mkdocstrings = {extras = ["python"], version = "^0.26.1"}
mkdocs-material = "^9.5.34"
termynal = "^0.12.1"
commitizen = "^3.29.1"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.6.1"
mkdocstrings = {extras = ["python"], version = "^0.26.1"}
termynal = "^0.12.1"
mkdocs-material = "^9.5.34"

[tool.commitizen]
version_provider = "scm"
annotated_tag = true
changelog_incremental = true

[tool.commitizen.change_type_map]
feat = ":sparkles: Features"
fix = ":bug: Bug fixes"
refactor = ":recycle: Refactoring"

[tool.pytest.ini_options]
minversion = "8.0"
required_plugins = [
    "pytest-cov",
    "pytest-html",
]
testpaths = [
    "maypy",
    "tests"
]
addopts = [
    "--cov=maypy",
    "--cov-config=pyproject.toml",
    "--cov-report=term-missing",
    "--cov-report=xml",
    "--cov-report=html",
    "--html=tests-reports/index.html",
    "--self-contained-html",
]

[tool.coverage.run]
source = ["maypy"]
branch = true
parallel = true

[tool.coverage.report]
fail_under = 80
show_missing = true
omit = [
    "tests/*",
]
exclude_also = [
    "def __repr__",
]
[tool.coverage.html]
directory = "tests-reports/coverage"

[tool.coverage.xml]
output = "tests-reports/coverage.xml"

[tool.mypy]
strict = true
show_error_context = true
show_column_numbers = true
show_error_codes = true
pretty = true
files = ["maypy", "tests"]

[tool.ruff]
target-version = "py39"
line-length = 100
indent-width = 4
output-format = "full"
show-fixes = true

[tool.ruff.lint]
select = [
    "A", # flake8-builtins
    "B", # flake8-bugbear
    "C4", # flake8-comprehension
    "F", # pyflake
    "Q", # flake8-quotes
    "E", # pycodestyle
    "W",
    "D", # pydocstyle
    "I", # isort,
    "PL", # pylint
    "ERA", # eradicate
    "TRY", # tryceratops
    "RUF", # Ruff
]
ignore = [
    "A003", "D100", "D107", "PLC0105", "D105", "TRY003",
    #  Formatter compatibility (https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules)
    "E501", "E111", "E114", "E117", "D206", "D300", "Q000", "Q001", "Q002", "Q003",
]

[tool.ruff.format]
indent-style = "space"
quote-style = "double"
line-ending = "auto"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "D101",
    "D102",
    "D103",
    "D104",
    "D105",
    "E731",
    "PLR2004"
]
